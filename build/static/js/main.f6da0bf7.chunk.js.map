{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo.js","app.js","index.js"],"names":["TodoForm","props","useState","item","setItem","_handleInputChange","e","target","name","value","Form","onSubmit","preventDefault","reset","handleSubmit","Group","controlId","Label","Control","type","placeholder","onChange","defaultValue","min","max","Button","variant","style","width","TodoList","ListGroup","list","map","stat","complete","Item","as","className","toString","key","_id","onClick","handleComplete","text","_getItem","ToDo","setList","count","setCount","useEffect","lists","difficulty","assignee","filter","length","document","title","Container","Navbar","bg","marginTop","Brand","items","Math","random","id","i","listItem","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"iPAkDeA,MA9Cf,SAAkBC,GAAQ,IAAD,EACCC,mBAAS,IADV,mBAChBC,EADgB,KACVC,EADU,KAKjBC,EAAqB,SAACC,GAC1BF,EAAQ,2BAAKD,GAAN,kBAAaG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAS/C,OACE,oCACE,kBAACC,EAAA,EAAD,CAAMC,SARY,SAACL,GACrBA,EAAEM,iBACFN,EAAEC,OAAOM,QACTZ,EAAMa,aAAaX,GACnBA,GAAQC,EAAQ,2BAAKD,GAAN,IAAYA,YAKvB,kBAACO,EAAA,EAAKK,MAAN,CAAYC,UAAU,kBACpB,wCACA,kBAACN,EAAA,EAAKO,MAAN,mBACA,kBAACP,EAAA,EAAKQ,QAAN,CAAcC,KAAK,OAAOX,KAAK,OAAOY,YAAY,sBAChDC,SAAUhB,KAGd,kBAACK,EAAA,EAAKK,MAAN,CAAYC,UAAU,qBACpB,kBAACN,EAAA,EAAKO,MAAN,oBACA,kBAACP,EAAA,EAAKQ,QAAN,CAAcC,KAAK,OAAOX,KAAK,WAAWY,YAAY,cAAcC,SAAUhB,KAEhF,kBAACK,EAAA,EAAKK,MAAN,CAAYC,UAAU,kBACpB,kBAACN,EAAA,EAAKO,MAAN,cACA,kBAACP,EAAA,EAAKQ,QAAN,CAAcI,aAAa,IAAIH,KAAK,QAAQI,IAAI,IAAIC,IAAI,IAAIhB,KAAK,aAAaa,SAAUhB,KAE1F,kBAACoB,EAAA,EAAD,CAAQC,QAAQ,UAAUP,KAAK,SAASQ,MACtC,CACEC,MAAO,QAFX,e,QCLOC,EA7BE,SAAC5B,GAkBhB,OACE,kBAAC6B,EAAA,EAAD,KAjBe,SAAC7B,GAEhB,OAAOA,EAAM8B,KAAKC,KAAI,SAAA7B,GACpB,IAAI8B,EAEJ,OADoCA,EAAnC9B,EAAK+B,SAAqC,SAAnB,UACjB,kBAACJ,EAAA,EAAUK,KAAX,CAAgBC,GAAG,KACxBC,UAAS,mBAAclC,EAAK+B,SAASI,YACrCC,IAAKpC,EAAKqC,IAAKC,QAAS,kBAAMxC,EAAMyC,eAAevC,EAAKqC,MACxDd,QAAO,UAAKO,IAEX9B,EAAKwC,SAQPC,CAAS3C,K,gBCoDD4C,MAtEf,WAAiB,IAAD,EACQ3C,mBAAS,IADjB,mBACT6B,EADS,KACHe,EADG,OAEY5C,mBAAS,GAFrB,mBAEP6C,EAFO,KAEAC,EAFA,KAsCd,OAlCAC,qBAAU,WACR,IAAIC,EAAQ,CACV,CAAEV,IAAK,EAAGN,UAAU,EAAOS,KAAM,oBAAqBQ,WAAY,EAAGC,SAAU,YAC/E,CAAEZ,IAAK,EAAGN,UAAU,EAAOS,KAAM,iBAAkBQ,WAAY,EAAGC,SAAU,YAC5E,CAAEZ,IAAK,EAAGN,UAAU,EAAOS,KAAM,eAAgBQ,WAAY,EAAGC,SAAU,YAC1E,CAAEZ,IAAK,EAAGN,UAAU,EAAMS,KAAM,cAAeQ,WAAY,EAAGC,SAAU,YACxE,CAAEZ,IAAK,EAAGN,UAAU,EAAOS,KAAM,aAAcQ,WAAY,EAAGC,SAAU,aAE1EN,EAAQ,CAACI,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,OACtD,IAoBHD,qBAAU,WACRD,EAASjB,EAAKsB,QAAO,SAAAlD,GAAI,OAAKA,EAAK+B,YAAUoB,QAC7CC,SAASC,MAAT,oBAA8BT,EAA9B,wBACC,CAACA,EAAOhB,IAGT,oCAEI,kBAAC0B,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOjC,QAAQ,OAAOC,MAAO,CAACiC,UAAW,QACpD,kBAACF,EAAA,EAAOG,MAAR,kBAA0Bd,EAA1B,uBAIF,6BAASV,UAAU,QAEzB,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAAUvB,aAjCO,SAACgD,GAChBA,EAAMtB,IAAMuB,KAAKC,SACjBF,EAAM5B,UAAW,EACjB4B,GAAShB,EAAQ,GAAD,mBAAKf,GAAL,CAAW+B,SAiC/B,yBAAKzB,UAAU,cACb,kBAAC,EAAD,CACEN,KAAMA,EACNW,eAjCsB,SAAAuB,GACtB,IAAI9D,EAAO4B,EAAKsB,QAAO,SAAAa,GAAC,OAAIA,EAAE1B,MAAQyB,KAAI,IAAM,GAEhD,GAAI9D,EAAKqC,IAAK,CACZrC,EAAK+B,UAAY/B,EAAK+B,SACtB,IAAIgB,EAAQnB,EAAKC,KAAI,SAAAmC,GAAQ,OAAIA,EAAS3B,MAAQrC,EAAKqC,IAAMrC,EAAOgE,KACpErB,EAAQI,Y,MCvBCkB,MAPf,WACI,OACI,oCACE,kBAAC,EAAD,QCHVC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJhB,SAASiB,eAAe,W","file":"static/js/main.f6da0bf7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\n\r\nfunction TodoForm(props) {\r\n  const [item, setItem] = useState({});\r\n\r\n\r\n\r\n  const _handleInputChange = (e) => {\r\n    setItem({ ...item, [e.target.name]: e.target.value });\r\n  }\r\n\r\n  const _handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.target.reset();\r\n    props.handleSubmit(item);\r\n    item && setItem({ ...item, item });\r\n  };\r\n  return (\r\n    <>\r\n      <Form onSubmit={_handleSubmit} >\r\n        <Form.Group controlId=\"formBasicEmail\" >\r\n          <h3>Add Item</h3>\r\n          <Form.Label>To Do Item</Form.Label>\r\n          <Form.Control type=\"text\" name=\"text\" placeholder=\"Add To Do List Item\"\r\n            onChange={_handleInputChange} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"formBasicPassword\">\r\n          <Form.Label>Assigned To</Form.Label>\r\n          <Form.Control type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={_handleInputChange} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"formBasicRange\">\r\n          <Form.Label>Range</Form.Label>\r\n          <Form.Control defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={_handleInputChange} />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\" style={\r\n          {\r\n            width: '50%'\r\n          }\r\n        }>\r\n          Add Item\r\n  </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nconst TodoList = (props) => {\r\n\r\n  const _getItem = (props) => {\r\n\r\n    return props.list.map(item => {\r\n      let stat;\r\n      !item.complete ? stat = 'success' : stat = 'danger';\r\n      return <ListGroup.Item as=\"li\"\r\n        className={`complete-${item.complete.toString()}`}\r\n        key={item._id} onClick={() => props.handleComplete(item._id)}\r\n        variant={`${stat}`}\r\n      >\r\n        {item.text}\r\n\r\n      </ListGroup.Item>\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ListGroup>\r\n      {_getItem(props)}\r\n\r\n    </ListGroup>\r\n\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from 'react';\r\nimport TodoForm from './form.js';\r\nimport TodoList from './list.js';\r\nimport {Navbar , Container} from 'react-bootstrap';\r\n\r\nfunction ToDo() {\r\n  let [list, setList] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let lists = [\r\n      { _id: 1, complete: false, text: 'Clean the Kitchen', difficulty: 3, assignee: 'Person A' },\r\n      { _id: 2, complete: false, text: 'Do the Laundry', difficulty: 2, assignee: 'Person A' },\r\n      { _id: 3, complete: false, text: 'Walk the Dog', difficulty: 4, assignee: 'Person B' },\r\n      { _id: 4, complete: true, text: 'Do Homework', difficulty: 3, assignee: 'Person C' },\r\n      { _id: 5, complete: false, text: 'Take a Nap', difficulty: 1, assignee: 'Person B' },\r\n    ];\r\n    setList([lists[0], lists[1], lists[2], lists[3], lists[4]]);\r\n  }, []);\r\n\r\n\r\n\r\n  const _addItem = (items) => {\r\n    items._id = Math.random();\r\n    items.complete = false;\r\n    items && setList([...list, items]);\r\n  };\r\n\r\n  const _toggleComplete = id => {\r\n    let item = list.filter(i => i._id === id)[0] || {};\r\n\r\n    if (item._id) {\r\n      item.complete = !item.complete;\r\n      let lists = list.map(listItem => listItem._id === item._id ? item : listItem);\r\n      setList(lists);\r\n    }\r\n\r\n  };\r\n  useEffect(() => {\r\n    setCount(list.filter(item => !item.complete).length);\r\n    document.title = `There are ${count} Items To Complete`;\r\n  }, [count, list]);\r\n\r\n  return (\r\n    <>\r\n      \r\n        <Container>\r\n        <Navbar bg=\"dark\" variant=\"dark\" style={{marginTop: 2+'em'}}>\r\n        <Navbar.Brand >There are {count} Items To Complete</Navbar.Brand>\r\n        \r\n        </Navbar>\r\n        \r\n      <section className=\"todo\">\r\n\r\n<div className=\"form-border\">\r\n  <TodoForm handleSubmit={_addItem} />\r\n</div>\r\n\r\n<div className=\"list-group\">\r\n  <TodoList\r\n    list={list}\r\n    handleComplete={_toggleComplete}\r\n  />\r\n</div>\r\n</section>\r\n        </Container>\r\n        \r\n      \r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default ToDo;","import React from 'react';\r\nimport ToDo from './components/todo/todo.js';\r\nimport './App.sass';\r\n\r\nfunction App(){\r\n    return (\r\n        <>\r\n          <ToDo />\r\n        </>\r\n    )\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);"],"sourceRoot":""}